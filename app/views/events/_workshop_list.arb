# local variable workshops: collection of workshop type events 
# local variable combinations: enable "workshop-kombinationen"

if workshops.length > 0

  # get details ordered grouped by week, and ordered by title
  details_by_week = workshops
    .order('title_de DESC')
    .collect_concat { |w| w.event_details }
    .group_by { |ed| ed.start_date.beginning_of_week }
    .sort

  # output
  ul :class => "workshops" do
    details_by_week.each do |week, details|
      li :class => "week" do
        div :class => "time-duration" do
          time l(week, :format => :short) + "-" + l(week + 4.day, :format => :short)
        end
        ul :class => "classes" do
          details.each do |detail| 
            workshop = detail.event
            li :class => "class" do
              a :href => "events/" + workshop.id.to_s do

                h4 workshop.title, :href => event_path(workshop), :class => "title"
                span workshop.people.map { |p| p.name }.join(', '), :class => "teacher" if workshop.people.length > 0
                div :class => "class-data" do
                  time l(workshop.event_details.first.starttime, :format => :hours_minutes), :class => "time-start"
                  text_node "-"
                  time l(workshop.event_details.first.endtime_clock, :format => :hours_minutes), :class => "time-end"
                  if workshop.price_regular.nil?
                    span :class => "price price-blank"
                  else
                    span number_to_currency(workshop.price_regular, :format => "%n,- %u"), :class => "price price-normal"
                  end
                  if workshop.price_reduced.nil?
                    span :class => "price price-blank"
                  else                  
                    span "(" + number_to_currency(workshop.price_reduced, :format => "%n,- %u") + ")", :class => "price price-reduced"
                  end
                end
              end
            end
          end
        end
      end
    end
  end
end
