# BÃ¼hne style event list

# local variable events
# local variable start_date
# local variable show_festival


# make a list of all occurences
all_occurences = []
events.includes(:people, :event_details => [:repeat_mode, :studio]).each do |event|
  event.event_details.each do |detail|
      
    # get occurrences
    occurrences = detail.occurrences
          
    if occurrences.length > 0
      occurrences.each do |oc|
        all_occurences << { :time => oc, :event => event, :detail => detail }
      end
    end 
  end
end

# display list of all occurences
ol :class => "event-calendar" do
  # TODO: find out why there are dublicate entries in all_occurences which need to be uniqed 
  all_occurences.uniq.sort_by { |o| o[:time] }.each do |o|
    event = o[:event]
    time = o[:time]
    detail = o[:detail]


    li :class => "row event event-programm" do
      div :class => "basic" do   
        div :class => "content" do
          a :href => event_path(event) do 
            h2 event.title, :class => "title"
            h3 event.display_type, :class =>"type"
            para event.people.map { |p| p.name }.join(', ').html_safe, :class => "teacher"
          end
        end
      end

      div :class => "details" do
        div :class => "content" do

          time(:class => "time") do
            span l(time, :format => :day_month), :class => "day"
            span l(time, :format => :hours_minutes), :class => "clock"
          end

          div :class => "address" do
            if detail.custom_place?
              div detail.custom_place, :class => "location"
            else
              too_long = (detail.studio.location.name.length + detail.studio.name.length) > 14
              div detail.studio.location.name, :class => "location"
              div detail.studio.name, :class => (too_long ? "location" : "studio")
            end
          end
        end    
      end
    end  
  end
end
