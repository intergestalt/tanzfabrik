# festival timetable: show all weeks that have occurrences of events
# kursplan: show for specific week

# pass week into timetable as local
# if variable not present, use start of current week
unless defined? start_date
  start_date = Date.today.beginning_of_week # gets current monday
end

# create array of dates to look at
dates = [start_date]
4.times do |i|
  dates.push (dates[i] + 1.day)
end

# create a big array of all the events details TODO: optimize
details = []
events.each do |event|
  details += event.event_details
end

# do all the calculations
table_data = []
tags = []

# first row
table_data[0] = []
table_data[0][0] = "Studio"
dates.each_with_index do |date, index|
  table_data[0][index + 1] = l date, :format=>:weekday
end

row_index = 1

# go through event details per time
details_by_studio = details.group_by {|detail| detail.studio}
details_by_studio.each do |time, details|

  # go through dates = columns
  dates.each_with_index do |date, column_index|
    
    # check if a detail has an occurrence on this day
    details.each do |detail|          
      if detail.occurs_on?(date)
        unless table_data[row_index]
          table_data[row_index] = [] # initialize row if that hasen't happened yet
        end          
        unless table_data[row_index][column_index + 1]
          table_data[row_index][column_index + 1] = [] # initialize a column if that hasen't happened yet
        end
        table_data[row_index][column_index + 1].push(detail)
        tags += detail.event.tags
      end
    end  
  end

  # only if there was an occurrence in this row, add time to first column
  if table_data[row_index]
    table_data[row_index][0] = details.first.studio.location.name + " " + details.first.studio.name # keep time object so we can sort and format
    row_index += 1
  end
end  

# display the table
div :class => "timetable-container" do
  table :class => "timetable" do
    tr do
      table_data[0].each do |header|
        th header
      end
    end
    table_data.shift
    table_data.sort! { |a,b| a[0] <=> b[0] }
    table_data.each do |row|
      tr do
        row.each_with_index do |data, index|
          if index == 0 
            td data
          else
            td do
              if data
                data.each do |detail|
                  article :class => "event" do              
                    div :class => "title" do
                      text_node detail.event.title.html_safe if detail.event.title
                    end
                    div :class => "teacher" do
                      text_node detail.event.people[0].name.html_safe if detail.event.people[0]
                    end
                    div :class => "teacher" do
                      text_node detail.event.people[1].name.html_safe if detail.event.people[1]
                    end
                    div :class => "warning" do
                      text_node detail.event.warning.html_safe if detail.event.warning
                    end
                    div :class => "time-footnotes" do
                      time l detail.starttime, :format => :hours_minutes
                      span "(" + detail.event.tags.map { |t| t.id }.join('/') + ")" if detail.event.tags.length > 0
                    end
                  end
                end
              end
            end          
          end
        end
      end
    end
  end
  dl :class => "tags" do
    tags.each do |tag|
      dt "(" + tag.id.to_s + ")"
      dd tag.name
    end
  end
end

